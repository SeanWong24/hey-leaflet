/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { GeoJsonObject } from "geojson";
import { LayerControlLayerDict } from "./components/hey-leaflet-layer-control/hey-leaflet-layer-control";
export namespace Components {
    interface HeyLeafletGeojson {
        "active": boolean;
        "geojson": GeoJsonObject;
        "getLayerInstance": () => Promise<L.GeoJSON<any>>;
        "options"?: L.GeoJSONOptions;
    }
    interface HeyLeafletLayerControl {
        "baseLayers": LayerControlLayerDict;
        "options": L.Control.LayersOptions;
        "overlays": LayerControlLayerDict;
    }
    interface HeyLeafletMap {
        "getMapInstance": () => Promise<L.Map>;
        "options": L.MapOptions;
        "view": L.LatLngExpression;
        "zoom": number;
    }
    interface HeyLeafletTileLayer {
        "active": boolean;
        "getLayerInstance": () => Promise<L.TileLayer>;
        "options"?: L.TileLayerOptions;
        "urlTemplate": string;
    }
}
declare global {
    interface HTMLHeyLeafletGeojsonElement extends Components.HeyLeafletGeojson, HTMLStencilElement {
    }
    var HTMLHeyLeafletGeojsonElement: {
        prototype: HTMLHeyLeafletGeojsonElement;
        new (): HTMLHeyLeafletGeojsonElement;
    };
    interface HTMLHeyLeafletLayerControlElement extends Components.HeyLeafletLayerControl, HTMLStencilElement {
    }
    var HTMLHeyLeafletLayerControlElement: {
        prototype: HTMLHeyLeafletLayerControlElement;
        new (): HTMLHeyLeafletLayerControlElement;
    };
    interface HTMLHeyLeafletMapElement extends Components.HeyLeafletMap, HTMLStencilElement {
    }
    var HTMLHeyLeafletMapElement: {
        prototype: HTMLHeyLeafletMapElement;
        new (): HTMLHeyLeafletMapElement;
    };
    interface HTMLHeyLeafletTileLayerElement extends Components.HeyLeafletTileLayer, HTMLStencilElement {
    }
    var HTMLHeyLeafletTileLayerElement: {
        prototype: HTMLHeyLeafletTileLayerElement;
        new (): HTMLHeyLeafletTileLayerElement;
    };
    interface HTMLElementTagNameMap {
        "hey-leaflet-geojson": HTMLHeyLeafletGeojsonElement;
        "hey-leaflet-layer-control": HTMLHeyLeafletLayerControlElement;
        "hey-leaflet-map": HTMLHeyLeafletMapElement;
        "hey-leaflet-tile-layer": HTMLHeyLeafletTileLayerElement;
    }
}
declare namespace LocalJSX {
    interface HeyLeafletGeojson {
        "active"?: boolean;
        "geojson"?: GeoJsonObject;
        "options"?: L.GeoJSONOptions;
    }
    interface HeyLeafletLayerControl {
        "baseLayers"?: LayerControlLayerDict;
        "options"?: L.Control.LayersOptions;
        "overlays"?: LayerControlLayerDict;
    }
    interface HeyLeafletMap {
        "options"?: L.MapOptions;
        "view"?: L.LatLngExpression;
        "zoom"?: number;
    }
    interface HeyLeafletTileLayer {
        "active"?: boolean;
        "options"?: L.TileLayerOptions;
        "urlTemplate": string;
    }
    interface IntrinsicElements {
        "hey-leaflet-geojson": HeyLeafletGeojson;
        "hey-leaflet-layer-control": HeyLeafletLayerControl;
        "hey-leaflet-map": HeyLeafletMap;
        "hey-leaflet-tile-layer": HeyLeafletTileLayer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hey-leaflet-geojson": LocalJSX.HeyLeafletGeojson & JSXBase.HTMLAttributes<HTMLHeyLeafletGeojsonElement>;
            "hey-leaflet-layer-control": LocalJSX.HeyLeafletLayerControl & JSXBase.HTMLAttributes<HTMLHeyLeafletLayerControlElement>;
            "hey-leaflet-map": LocalJSX.HeyLeafletMap & JSXBase.HTMLAttributes<HTMLHeyLeafletMapElement>;
            "hey-leaflet-tile-layer": LocalJSX.HeyLeafletTileLayer & JSXBase.HTMLAttributes<HTMLHeyLeafletTileLayerElement>;
        }
    }
}
